% This hold the actual location and calculations for converting pixrls distances
% to metric distances


function dataOut = LMM_calculateDistance(imgSet,imgProps,setParameters,dirList,label)
    % Unpack
    img = imgSet.img;
    imgBW = imgSet.imgBW;
    type = imgSet.type;
    color = imgSet.color;
    filename = imgProps.filename;

    if ((label == "blocks") || (label == "blocksAndTicks"))
        blocksData = LMM_fitTicksBlocks(imgBW);
        if setParameters.printRulerOverlay
            LMM_save1cmOverlay_Blocks(imgSet,imgProps,dirList,blocksData)
        end

        % Save data
        
        
    elseif ((label == "blocks") || (label == "blocksAndTicks") (label == "blocksAndTicks"))
       LMM_fitTicksBlocks(imgBW);
        
    elseif (label == "text")
        
    end
        
        
        "text"
        type = "mid";
        color = "black";    
    
    elseif label == "ticksBlack"
        type = "mid";
        color = "black";
        
    elseif label == "ticksWhite"
        
        

    distSummaryt = cell(1,length(distHeaders2));
    distSummaryt = cell2table(distSummaryt);
    distSummaryt.Properties.VariableNames = distHeaders2;
    distSummaryt.name = NAME;
    distSummaryt.pass = string(min_Wvar_Ypos);
    distSummaryt.calculated_dist = CONVERSION_FACTOR;
    distSummaryt.method = CONVERSION_METHOD;
    %distSummary = [distSummary; distSummaryt];
    %LOWEST = [LOWEST; PASS];
    
    dataOut.distSummaryt = distSummaryt;
    dataOut.distScanlines = distScanlines;
    dataOut.imgPrint = imgPrint;
        
end